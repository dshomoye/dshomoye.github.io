{"version":3,"sources":["webpack://dshomoye-blog/./src/components/TagPills.js","webpack://dshomoye-blog/./src/components/bio.js","webpack://dshomoye-blog/./src/components/ArticleCard.js","webpack://dshomoye-blog/./src/pages/index.js"],"names":["pillMap","technology","class","icon","life","travel","misc","TagPills","tagNames","pills","map","tagName","index","className","key","Link","to","tabIndex","propTyes","PropTypes","author","useStaticQuery","site","siteMetadata","style","display","marginBottom","alignItems","S","src","alt","marginRight","minWidth","borderRadius","width","height","imgStyle","title","slug","date","excerpt","tags","fluid","data-sal","data-sal-easing","data-sal-duration","backgroundColor","dangerouslySetInnerHTML","__html","aria-label","G","image","durationFadeIn","imgClassName","data-src","render","data","this","props","siteTitle","posts","allMarkdownRemark","nodes","images","allFile","edges","location","node","imageSrc","frontmatter","fields","imageNode","find","n","relativePath","bannerImage","childImageSharp","gatsbyImageData","publicURL","parent","sourceInstanceName","React"],"mappings":"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","file":"component---src-pages-index-js-9e288b026a11ac366310.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link } from \"gatsby\"\n\nconst pillMap = {\n  technology: {\n    class: \"red-pill\",\n    icon: \"👨🏿‍💻\",\n  },\n  life: {\n    class: \"green-pill\",\n    icon: \"💆🏾\",\n  },\n  travel: {\n    class: \"blue-pill\",\n    icon: \"🗺\",\n  },\n  misc: {\n    class: \"gray-pill\",\n    icon: \"🌊\",\n  },\n}\n\nconst TagPills = ({ tagNames }) => {\n  if (!tagNames) return null\n  const pills = tagNames.map((tagName, index) => {\n    return (\n      <div className=\"post-tag-pill\" key={index}>\n        <Link to={`/tags/${tagName}`} className=\"tag-link\">\n          <p className={`post-tag ${pillMap[tagName].class}`} tabIndex={0}>\n            {pillMap[tagName].icon} {tagName}\n          </p>\n        </Link>\n      </div>\n    )\n  })\n  return <div className=\"pills-container\">{pills}</div>\n}\n\nTagPills.propTyes = {\n  tagName: PropTypes.arrayOf(PropTypes.string),\n}\n\nexport default TagPills\n","import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author\n        }\n      }\n    }\n  `)\n\n  const { author } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: `3rem`,\n        alignItems: `center`,\n      }}\n    >\n      <StaticImage\n        src=\"../../content/assets/damola.png\"\n        alt={author}\n        style={{\n          marginRight: `0.7rem`,\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        width={50}\n        height={50}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p style={{ marginBottom: 0 }}>\n        By{\" \"}\n        <Link to=\"/about\">\n          <strong tabIndex={0}>{author}</strong>\n        </Link>\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport TagPills from \"./TagPills\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nconst ArticleCard = ({ title, slug, date, excerpt, tags, fluid, src }) => {\n  return (\n    <article\n      className=\"card-article flex\"\n      data-sal=\"slide-up\"\n      data-sal-easing=\"ease\"\n      data-sal-duration=\"700\"\n      key={slug}\n    >\n      <div className=\"article-item article-content\">\n        <Link className=\"home-article-link\" to={slug}>\n          <header tabIndex={0}>\n            <h3>{title}</h3>\n            <small style={{ backgroundColor: \"None\" }}>{date}</small>\n          </header>\n          < >\n            <p\n              dangerouslySetInnerHTML={{\n                __html: excerpt,\n              }}\n            />\n          </>\n        </Link>\n        <TagPills tagNames={tags} />\n      </div>\n      {fluid && (\n        <Link to={slug} className=\"article-item banner-container\" aria-label={`Image with link to ${title}`}>\n          <GatsbyImage\n            image={fluid}\n            className=\"banner-image\"\n            durationFadeIn={100}\n            imgClassName=\"article-image\"\n            tabIndex={0}\n          />\n        </Link>\n      )}\n      {src && (\n        <Link to={slug} className=\"article-item banner-container\" aria-label={`Image with ink to ${title}`}>\n          <img data-src={src} alt={title} className=\"banner-image lazyload\" tabIndex={0} />\n        </Link>\n      )}\n    </article>\n  )\n}\n\nexport default ArticleCard\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport ArticleCard from \"../components/ArticleCard\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.nodes\n    const images = data.allFile.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"Home\" />\n        <Bio />\n        {posts && posts.map((node) => {\n          const title = node.frontmatter.title || node.fields.slug\n          let fluid\n          let imageSrc\n          const imageNode = images.find(\n            (n) => n.node.relativePath === node.frontmatter.bannerImage\n          )\n          if (imageNode) {\n            if (imageNode.node.childImageSharp?.gatsbyImageData) {\n              fluid = imageNode.node.childImageSharp.gatsbyImageData\n            } else {\n              imageSrc = imageNode.node.publicURL\n            }\n          }\n          if (node.parent.sourceInstanceName === \"blog\") {\n            return (\n              <ArticleCard\n                title={title}\n                slug={node.fields.slug}\n                date={node.frontmatter.date}\n                excerpt={node.excerpt}\n                tags={node.frontmatter.tags}\n                fluid={fluid}\n                key={node.fields.slug}\n                src={imageSrc}\n              />\n            )\n          }\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          bannerImage\n          tags\n        }\n        parent {\n          ... on File {\n            sourceInstanceName\n          }\n        }\n      }\n    }\n    allFile(filter: { extension: { ne: \"md\" } }) {\n      edges {\n        node {\n          relativePath\n          publicURL\n          childImageSharp {\n            gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED)\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}