{"version":3,"sources":["webpack://dshomoye-blog/./src/templates/tags.js"],"names":["pageContext","data","location","tag","pageTitle","allMarkdownRemark","edges","totalCount","tagHeader","title","site","siteMetadata","description","className","map","node","slug","fields","frontmatter","key","Link","to"],"mappings":"sKAiCA,UA3Ba,SAAC,GAAqC,IAAnCA,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACzBC,EAAQH,EAARG,IACFC,EAAeD,EAAN,SACf,EAA8BF,EAAKI,kBAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAeD,EAAN,KAAqBJ,EAArB,UAAgD,IAAfI,EAAmB,GAAK,KAExE,OACE,gBAAC,IAAD,CAAQL,SAAUA,EAAUO,MAAOR,EAAKS,KAAKC,aAAaF,OACxD,gBAAC,IAAD,CAAKA,MAAOL,EAAWQ,YAAW,sBAAwBR,EAAxB,MAClC,2BACE,0BAAKI,GACL,sBAAIK,UAAU,YACXP,EAAMQ,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAP,EAAUM,EAAKG,YAAfT,MACR,OACE,sBAAIU,IAAKH,GACP,gBAAC,EAAAI,KAAD,CAAMC,GAAIL,GAAOP","file":"component---src-templates-tags-js-4cf0a8e7c4611bd536f0.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst Tags = ({ pageContext, data, location }) => {\n  const { tag } = pageContext\n  const pageTitle = `${tag} posts`\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} \"${tag}\" post${totalCount === 1 ? \"\" : \"s\"}`\n\n  return (\n    <Layout location={location} title={data.site.siteMetadata.title}>\n      <SEO title={pageTitle} description={`All posts with tag ${pageTitle}.`} />\n      <div>\n        <h1>{tagHeader}</h1>\n        <ul className=\"tag-list\">\n          {edges.map(({ node }) => {\n            const { slug } = node.fields\n            const { title } = node.frontmatter\n            return (\n              <li key={slug}>\n                <Link to={slug}>{title}</Link>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}